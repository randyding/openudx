/*
 * Copyright 2016 Yesdat Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_outer_classname = "OpenUdx";
package com.yesdat.openudx;

// OpenUDX extensions ("ext" fields in the spec & JSON representation)
// are represented here by Protocol Buffer extensions. This proto only
// reserves the range of IDs 100-9999 at every extensible object.
// Reserved ranges:
//   100-199: Reserved for Yesdat Marketing project.
//   200-999: Free for use with other marketing projects.
//   1000-1999: Reserved for Yesdat.
//   2000-9999: Free for use with other projects.

// The top-level exchange request object contains a globally unique exchange
// request ID. This id attribute is required as is at least one behavior
// object. Other attributes in this top-level object establish rules and
// restrictions that apply to all request being offered.
//
// There are also several subordinate objects that provide detailed data to
// potential buyers. Among these are the User and Device objects, which describe
// whose behavior been described. These objects are highly recommended, but 
// sometimes some of them applies to a given exchange request.
message ExchangeRequest {
  // Unique ID of the exchange request, provided by the client.
  required string id = 1;

  // Details via a User object about the human user of the device.
  optional User user = 2;

  // Details via a Device object about the device of the human user.
  optional Device device = 3;

  // Array of behavior objects representing the exchange offered.
  // At least 1 behavior object is required.
  repeated Behavior behaviors = 4;

  // Location of the device assumed to be the user's current location defined
  // by a Geo object.
  // This field is not required, but it's highly recommended.
  optional Geo geo = 5;


  // Blocked advertiser categories using the IAB content categories.
  // Refer to enum ContentCategory.
  repeated string bcat = 11;

  // Block list of advertisers by their domains (e.g., "ford.com").
  repeated string badv = 12;

  // Indicator of test mode in which auctions are not billable,
  // where 0 = live mode, 1 = test mode.
  optional bool test = 13 [default = false];

  // Extensions.
  extensions 100 to 9999;


  // This object contains information known or derived about
  // the human user of the device (i.e., the audience for advertising).
  // The user id is an exchange artifact and may be subject to rotation or other
  // privacy policies. However, this user ID must be stable long enough to serve
  // reasonably as the basis for frequency capping and retargeting.
  message User {
    // DataProvider-specific ID for the user.
    // At least one of uid or exchangeuid is recommended.
    optional UserID uid = 1;

    // Exchange-specific ID for the user as mapped by the exchange for the buyer.
    // At least one of exchangeuid or uid is recommended.
    optional string exchangeuid = 2;
    
    // DataProvider-specific candidate ID  for the user.
    repeated UserID candidateuids = 3;

    // Year of birth as a 4-digit integer.
    optional int32 yob = 4;

    // Gender as "M" male, "F" female, "O" Other. (Null indicates unknown)
    optional string gender = 5;

    // Comma separated list of keywords, interests, or intent.
    // Note: OpenRTB 2.2 allowed an array-of-strings as alternate implementation
    // but this was fixed in 2.3+ where it's definitely a single string with CSV
    // content again. Compatibility with some OpenRTB 2.2 exchanges that adopted
    // the alternate representation may require custom handling of the JSON.
    optional string keywords = 6;

    // Optional feature to pass exchanger's data set in the exchange's cookie.
    // The string must be in base85 cookie safe characters and be in any format.
    // Proper JSON encoding must be used to include "escaped" quotation marks.
    optional string customdata = 7;

    // Location of the user's home base defined by a Geo object.
    // This is not necessarily their current location.
    optional Geo geo = 8;
    

    // Additional user data. Each Data object represents a different data source.
    repeated Data data = 11;

    // Extensions.
    extensions 100 to 9999;
    
    message UserID {
      required UserIDType uidt = 1; // user id type
      required string uid = 2; // user id string
      optional string uidsha1 = 3;
      optional string uidmd5 = 4;
    }

    enum UserIDType {
      PHONE_IMEI = 1;
      
      PHONE_MAC = 2;
      PHONE_IP = 3;
      PHONE_IPV6 = 4;
      
      PHONE_BLUETOOTH = 5;
      
          
      IOS_ICLOUD_ID = 6;
      IOS_IDFA = 7;
  
      ANDROID_ID = 8;
      ANDROID_GAID = 9;
  
  
      PHOME_IMSI = 10;
      PHONE_NO = 11;
  
      EMAIL_NO = 12;
  
      CREDIT_CARD_NO = 13;
  
      IDENTITY_CARD_NO = 14;
  
      QQ_ID = 15;
  
      WECHAT_ID = 16;
  
      WEIBO_ID = 17;
  
      FACEBOOK_ID = 18;
  
      GOOGLE_ID = 19;
  
      TWITTER_ID = 20;
  
      LINKEDIN_ID = 21;
  
      ALIPAY_ID = 22;
    }


    enum Gender {
      MALE   = 1; // "M"
      FEMALE = 2; // "F"
      OTHER  = 3; // "O"
    }
    

  }

  // This object provides information pertaining to the device
  // through which the user is interacting. Device information includes its
  // hardware, platform, location, and carrier data. The device can refer to a
  // mobile handset, a desktop computer, set top box, or other digital device.
  message Device {
    // DataProvider-specific ID for the device.
    // At least one of did or exchangedid is recommended.
    optional DeviceID did = 1;
    
    // Exchange-specific ID for the device.
    // At least one of exchangedid or did is recommended.
    optional string exchangedid = 2;
    
    // DataProvider-specific candidate ID  for the device.
    repeated DeviceID candidatedids = 3;
    
    
    // Standard "Do Not Track" flag as set in the header by the browser,
    // where 0 = tracking is unrestricted, 1 = do not track.
    // This field is not required, but it's highly recommended.
    optional bool dnt = 4;
    
    // "Limit Ad Tracking" signal commercially endorsed (e.g., iOS, Android),
    // where 0 = tracking is unrestricted, 1 = tracking must be limited per
    // commercial guidelines.
    optional bool lmt = 5;
    


    // Browser user agent string.
    // This field is not required, but it's highly recommended.
    optional string ua = 6;

    // IPv4 address closest to device.
    // This field is not required, but it's highly recommended.
    // Exchanger truncates to first 3 octets; OpenRTB is "X.X.X.0"]
    optional string ip = 7;

    // IPv6 address closest to device.
    // Exchanger truncates to first 6 octets; OpenRTB is "X:X:X:::::"]
    optional string ipv6 = 8;

    // Location of the Device's home base defined by a Geo object.
    // This is not necessarily their current location.
    optional Geo geo = 9;

    // Carrier or ISP, e.g. "VERIZON", specified using Mobile Network Code (MNC).
    // "WIFI" is often used in mobile to indicate high bandwidth
    // (e.g., video friendly vs. cellular).
    optional string carrier = 10;

    // Browser language using ISO-639-1-alpha-2.
    optional string language = 11;

    // Device make (e.g., "Apple").
    optional string make = 12;

    // Device model (e.g., "iPhone").
    optional string model = 13;

    // Device operating system (e.g., "iOS").
    optional string os = 14;

    // Device operating system version (e.g., "3.1.2").
    optional string osv = 15;

    // Hardware version of the device (e.g., "5S" for iPhone 5S).
    optional string hwv = 16;

    // Physical width of the screen in pixels.
    optional int32 w = 17;

    // Physical height of the screen in pixels.
    optional int32 h = 18;

    // Screen size as pixels per linear inch.
    optional int32 ppi = 19;

    // The ratio of physical pixels to device independent pixels.
    optional double pxratio = 20;

    // Support for JavaScript, where 0 = no, 1 = yes.
    optional bool js = 21;

    // Network connection type.
    optional ConnectionType connectiontype = 22;

    // The general type of device.
    optional DeviceType devicetype = 23;

    // Version of Flash supported by the browser.
    optional string flashver = 24;

    // Context Type 1=site 2=app.
    optional ContextType ct = 25;
    
    //oneof siteorapp {
      // Context Type 1=site.
    optional Site site = 26;
      // Context Type 2=app.
    optional App app = 27;
    //}    
    
    // Installation application app list.
    repeated App insapps = 28;
    
    // HomeKit devices.
    optional HomeKit home = 29;
    
    // HealthKit datas.
    optional HealthKit health = 30;
    
    
    // Extensions.
    extensions 100 to 9999;
    
    // Device ID
    message DeviceID {
      required DeviceIDType didt = 1; // device id type
      required string did = 2; // device id string
      optional string didsha1 =3;
      optional string didmd5 =4;
    }
    
    enum DeviceIDType {
      PHONE_IMEI = 1;
      
      PHONE_MAC = 2;
      PHONE_IP = 3;
      PHONE_IPV6=4;
      
      PHONE_BLUETOOTH = 5;
      
          
      IOS_ICLOUD_ID = 6;
      IOS_IDFA = 7;
  
      ANDROID_ID = 8;
      ANDROID_GAID = 9;

    }



    // The following table lists the type of device from which the
    // user behavior originated.
    enum DeviceType {
      // Mobile (obsolete, alias for PHONE or TABLET).
      MOBILE = 1;

      // Personal Computer.
      PERSONAL_COMPUTER = 2;

      // Connected TV.
      CONNECTED_TV = 3;

      // Phone.
      PHONE = 4;

      // Tablet.
      TABLET = 5;

      // Connected device.
      CONNECTED_DEVICE = 6;

      // Set top box.
      SET_TOP_BOX = 7;
    }

    // The following table lists the various options for the type of device
    // connectivity.
    enum ConnectionType {
      CONNECTION_UNKNOWN = 0;
      ETHERNET = 1;
      WIFI = 2;
      CELL_UNKNOWN = 3;
      CELL_2G = 4;
      CELL_3G = 5;
      CELL_4G = 6;
    }
    
    enum ContextType {
      SITE = 1;
      APP = 2;
    }
    
    

    
    // This object should be included if the ad supported content 
    // is a website as opposed to a non-browser application. A exchange request must
    // not contain both a Site and an App object. At a minimum, it is useful to
    // provide a site ID or page URL, but this is not strictly required.
    message Site {
      // Site ID on the exchange.
      optional string id = 1;
  
      // Site name (may be masked at publisher's request).
      optional string name = 2;
  
      // Domain of the site, used for advertiser side blocking.
      // For example, "foo.com".
      optional string domain = 3;
  
      // Array of IAB content categories of the site.
      // See enum ContentCategory.
      repeated string cat = 4;
  
      // Array of IAB content categories that describe the current section
      // of the site.
      // See enum ContentCategory.
      repeated string sectioncat = 5;
  
      // Array of IAB content categories that describe the current page or view
      // of the site.
      // See enum ContentCategory.
      repeated string pagecat = 6;
  
      // URL of the page where the impression will be shown.
      optional string page = 7;
  
      // Indicates if the site has a privacy policy, where 0 = no, 1 = yes.
      optional bool privacypolicy = 8;
  
      // Referrer URL that caused navigation to the current page.
      optional string ref = 9;
  
      // Search string that caused navigation to the current page.
      optional string search = 10;
  
      // Details about the Publisher of the site.
      optional Publisher publisher = 11;
    
      // Comma separated list of keywords about this site.
      optional string keywords = 12;
  
      // Mobile-optimized signal, where 0 = no, 1 = yes.
      optional bool mobile = 13;
  
      // Extensions.
      extensions 100 to 9999;
    }
  
    // This object should be included if the ad supported content
    // is a non-browser application (typically in mobile) as opposed to a website.
    // A exchange request must not contain both an App and a Site object.
    // At a minimum, it is useful to provide an App ID or bundle,
    // but this is not strictly required.
    message App {
      // Application ID on the exchange.
      optional string id = 1;
  
      // Application name (may be aliased at publisher's request).
      optional string name = 2;
  
      // Domain of the application. For example, "mygame.foo.com".
      optional string domain = 3;
  
      // Array of IAB content categories of the app.
      // See enum ContentCategory.
      repeated string cat = 4;
  
      // Array of IAB content categories that describe the current section
      // of the app.
      // See enum ContentCategory.
      repeated string sectioncat = 5;
  
      // Array of IAB content categories that describe the current page or view
      // of the app.
      // See enum ContentCategory.
      repeated string pagecat = 6;
  
      // Application version.
      optional string ver = 7;
  
      // Application bundle or package name (for example, com.foo.mygame).
      // This is intended to be a unique ID across multiple exchanges.
      optional string bundle = 8;
  
      // Indicates if the app has a privacy policy, where 0 = no, 1 = yes.
      optional bool privacypolicy = 9;
  
      // 0 = app is free, 1 = the app is a paid version.
      optional bool paid = 10;
  
      // Details about the Publisher (Section 3.2.8) of the app.
      optional Publisher publisher = 11;
    
      // Comma separated list of keywords about the app.
      optional string keywords = 12;
  
      // App store URL for an installed app; for QAG 1.5 compliance.
      optional string storeurl = 13;
  
      // Extensions.
      extensions 100 to 9999;
    }
    
    message HomeKit {
      repeated Data devices = 1;
    }
    
    message HealthKit {
      repeated Data datas = 1;
    }
  
  }
  
  // This object describes the content in which the behavior
  // will appear, which may be syndicated or non-syndicated content.
  // This object may be useful when syndicated content contains behavior and
  // does not necessarily match the publisher's general content.
  // The exchange might or might not have knowledge of the page where the
  // content is running, as a result of the syndication method.
  // For example might be a video behavior embedded in an iframe on an
  // unknown web property or device.
  message Behavior {
    // ID uniquely identifying the behavior.
    optional string id = 1;

    // Content episode number (typically applies to video content).
    optional int32 episode = 2;

    // Content title.
    // Video Examples: "Search Committee" (television), "A New Hope" (movie),
    // or "Endgame" (made for web).
    // Non-Video Example: "Why an Antarctic Glacier Is Melting So Quickly"
    // (Time magazine article).
    optional string title = 3;

    // Content series.
    // Video Examples: "The Office" (television), "Star Wars" (movie),
    // or "Arby 'N' The Chief" (made for web).
    // Non-Video Example: "Ecocentric" (Time Magazine blog).
    optional string series = 4;

    // Content season; typically for video content (e.g., "Season 3").
    optional string season = 5;

    // URL of the content, for buy-side contextualization or review.
    optional string url = 6;

    // Array of IAB content categories that describe the content.
    // See enum ContentCategory.
    repeated string cat = 7;

    // Video quality per IAB's classification.
    optional VideoQuality videoquality = 8;

    // Comma separated list of keywords describing the content.
    optional string keywords = 9;

    // Content rating (e.g., MPAA).
    // [39: "DV_G", 40: "DV_PG", 41: "DV_T", 42: "DV_MA", 43: "DV_UNRATED"]
    optional string contentrating = 10;

    // User rating of the content (e.g., number of stars, likes, etc.).
    optional string userrating = 11;

    // Type of content (game, video, text, etc.).
    optional ContentContext context = 12;

    // 0 = not live, 1 = content is live (e.g., stream, live blog).
    optional bool livestream = 13;

    // 0 = indirect, 1 = direct.
    optional bool sourcerelationship = 14;

    // Details about the content Publisher (Section 3.2.10).
    optional Publisher publisher = 15;

    // Length of content in seconds; appropriate for video or audio.
    optional int32 len = 16;

    // Media rating per QAG guidelines.
    optional QAGMediaRating qagmediarating = 17;

    // Indicator of whether or not the content is embeddable (e.g., an
    // embeddable video player), where 0 = no, 1 = yes.
    optional bool embeddable = 18;

    // Content language using ISO-639-1-alpha-2.
    optional string language = 19;
    

    

    // Extensions.
    extensions 100 to 9999;

    // The following table lists the options for the video quality.
    // These values are defined by the IAB -
    // http://www.iab.net/media/file/long-form-video-final.pdf.
    enum VideoQuality {
      QUALITY_UNKNOWN = 0;
      PROFESSIONAL = 1;
      PROSUMER = 2;
      USER_GENERATED = 3;
    }

    // The following table lists the various options for
    // indicating the type of content in which the impression will appear.
    //
    // This OpenRTB table has values derived from the IAB Quality Assurance
    // Guidelines (QAG). Practitioners should keep in sync with updates to the
    // QAG values as published on IAB.net.
    enum ContentContext {
      VIDEO = 1;
      GAME = 2;
      MUSIC = 3;
      APPLICATION = 4;
      TEXT = 5;
      OTHER = 6;
      CONTEXT_UNKNOWN = 7;
    }

    // The following table lists the media ratings used in
    // describing content based on the QAG categorization.
    // Refer to http://www.iab.net/ne_guidelines for more information.
    enum QAGMediaRating {
      ALL_AUDIENCES = 1;
      EVERYONE_OVER_12 = 2;
      MATURE = 3;
    }
    
  }

  // This object defines the producer of the content in which
  // the ad will be shown. This is particularly useful when the content is
  // syndicated and may be distributed through different publishers and thus
  // when the producer and publisher are not necessarily the same entity.
  message Publisher {
    // Content producer or originator ID. Useful if content is syndicated,
    // and may be posted on a site using embed tags.
    optional string id = 1;

    // Content producer or originator name (e.g., "Warner Bros").
    optional string name = 2;

    // Array of IAB content categories that describe the content producer.
    // See enum ContentCategory.
    repeated string cat = 3;

    // Highest level domain of the content producer (e.g., "producer.com").
    optional string domain = 4;

    // Extensions.
    extensions 100 to 9999;
  }
  
  
  // This object encapsulates various methods for specifying a
  // geographic location. When subordinate to a Device object, it indicates the
  // location of the device which can also be interpreted as the user's current
  // location. When subordinate to a User object, it indicates the location of
  // the user's home base (i.e., not necessarily their current location).
  //
  // The lat/lon attributes should only be passed if they conform to the
  // accuracy depicted in the type attribute. For example, the centroid of a
  // geographic region such as postal code should not be passed.
  message Geo {
    // Latitude from -90.0 to +90.0, where negative is south.
    optional double lat = 1;

    // Longitude from -180.0 to +180.0, where negative is west.
    optional double lon = 2;

    // Country using ISO-3166-1 Alpha-3.
    optional string country = 3;

    // Region code using ISO-3166-2; 2-letter state code if USA.
    optional string region = 4;

    // Region of a country using FIPS 10-4 notation. While OpenRTB supports
    // this attribute, it has been withdrawn by NIST in 2008.
    optional string regionfips104 = 5;

    // Google metro code; similar to but not exactly Nielsen DMAs.
    // See Appendix A for a link to the codes.
    // (http://code.google.com/apis/adwords/docs/appendix/metrocodes.html).
    optional string metro = 6;

    // City using United Nations Code for Trade & Transport Locations.
    // See Appendix A for a link to the codes.
    // (http://www.unece.org/cefact/locode/service/location.htm).
    optional string city = 7;

    // Zip/postal code.
    optional string zip = 8;

    // Source of location data; recommended when passing lat/lon.
    optional LocationType type = 9;

    // Local time as the number +/- of minutes from UTC.
    optional int32 utcoffset = 10;

    // Extensions.
    extensions 100 to 9999;

    // The following table lists the options to indicate how the
    // geographic information was determined.
    enum LocationType {
      GPS_LOCATION = 1;
      IP = 2;
      USER_PROVIDED = 3;
    }
  }

  // The data and segment objects together allow additional data
  // about the user to be specified. This data may be from multiple sources
  // whether from the exchange itself or third party providers as specified by
  // the id field. A exchange request can mix data objects from multiple providers.
  // The specific data providers in use should be published by the exchange
  // a priori to its bidders.
  message Data {
    // Exchange-specific ID for the data provider.
    optional string id = 1;

    // Exchange-specific name for the data provider.
    optional string name = 2;

    // Array of Segment (Section 3.2.15) objects that contain the actual
    // data values.
    repeated Segment segment = 3;

    // Extensions.
    extensions 100 to 9999;

    // OpenRTB 3.2.15: Segment objects are essentially key-value pairs that
    // convey specific units of data about the user. The parent Data object
    // is a collection of such values from a given data provider.
    // The specific segment names and value options must be published by the
    // exchange a priori to its bidders.
    message Segment {
      // ID of the data segment specific to the data provider.
      optional string id = 1;

      // Name of the data segment specific to the data provider.
      optional string name = 2;

      // String representation of the data segment value.
      optional string value = 3;

      // Extensions.
      extensions 100 to 9999;
    }
  }


}

// This object is the top-level exchange response object (i.e., the
// unnamed outer JSON object). The id attribute is a reflection of the exchange
// request ID for logging purposes. Similarly, bidid is an optional response
// tracking ID for exhchangers. If specified, it can be included in the subsequent
// win notice call if the bid wins. At least one BehaviorResult object is required,
// which contains at least one behavior result. Other attributes are
// optional. To express a "no-echange", the options are to return an empty response
// with HTTP 204. Alternately if the exchanger wishes to convey to the exchange a
// reason for not accepting, just a ExchangeResponse object is returned with a
// reason code in the nbr attribute.
message ExchangeResponse {
  // ID of the exchange request to which this is a response.
  required string id = 1;

  // Array of behavior result objects.
  repeated BehaviorResult brs = 2;

  // Exchanger generated user ID to assist with logging/tracking.
  optional string userid = 3;
  
  // Exchanger generated response ID to assist with logging/tracking.
  optional string trackid = 4;
  

  // Reason for not Accepted.
  optional NoAcceptedReason nar = 5;

  // Extensions.
  extensions 100 to 9999;

  // The following table lists the options for a Exchanger to signal
  // the exchange as to why it did not offer a bid for the impression.
  enum NoAcceptedReason {
    SUCCED = 0;
    TECHNICAL_ERROR = 1;
    INVALID_REQUEST = 2;
    UNSUPPORTED_DEVICE = 3;
    BLOCKED_DATAPROVIDER = 4;
    UNMATCHED_USER = 5;
  }

  // Each of BevaviorResult relates to a specific behavior in the exchange request
  // via the impid attribute and constitutes an offer to buy that impression
  // for a given price.
  message BehaviorResult {
    // ID uniquely identifying the behavior by request.
    required string id = 1;
    
    // Exchanger generated behavior ID to assist with logging/tracking.
    required string trackid = 2;

    required NoAcceptedReason returncode = 3;
    
    // Extensions.
    extensions 100 to 9999;
    
    enum NoAcceptedReason {
      SUCCED = 0;
      TECHNICAL_ERROR = 1;
      INVALID_REQUEST = 2;
      KNOWN_WEB_SPIDER = 3;
      SUSPECTED_NONHUMAN_TRAFFIC = 4;
      CLOUD_DATACENTER_PROXYIP = 5;
      UNSUPPORTED_DEVICE = 6;
      BLOCKED_PUBLISHER = 7;
      UNMATCHED_USER = 8;
    }
  }
}

// The following list represents the IAB's contextual taxonomy for
// categorization. Standard IDs have been adopted to easily support the
// communication of primary and secondary categories for various objects.
//
// This OpenRTB table has values derived from the IAB Quality Assurance
// Guidelines (QAG). Practitioners should keep in sync with updates to the
// QAG values as published on IAB.net.
enum ContentCategory {
  IAB1 = 1;        // Arts & Entertainment
  IAB1_1 = 2;      // Books & Literature
  IAB1_2 = 3;      // Celebrity Fan/Gossip
  IAB1_3 = 4;      // Fine Art
  IAB1_4 = 5;      // Humor
  IAB1_5 = 6;      // Movies
  IAB1_6 = 7;      // Music
  IAB1_7 = 8;      // Television
  IAB2 = 9;        // Automotive
  IAB2_1 = 10;     // Auto Parts
  IAB2_2 = 11;     // Auto Repair
  IAB2_3 = 12;     // Buying/Selling Cars
  IAB2_4 = 13;     // Car Culture
  IAB2_5 = 14;     // Certified Pre-Owned
  IAB2_6 = 15;     // Convertible
  IAB2_7 = 16;     // Coupe
  IAB2_8 = 17;     // Crossover
  IAB2_9 = 18;     // Diesel
  IAB2_10 = 19;    // Electric Vehicle
  IAB2_11 = 20;    // Hatchback
  IAB2_12 = 21;    // Hybrid
  IAB2_13 = 22;    // Luxury
  IAB2_14 = 23;    // MiniVan
  IAB2_15 = 24;    // Motorcycles
  IAB2_16 = 25;    // Off-Road Vehicles
  IAB2_17 = 26;    // Performance Vehicles
  IAB2_18 = 27;    // Pickup
  IAB2_19 = 28;    // Road-Side Assistance
  IAB2_20 = 29;    // Sedan
  IAB2_21 = 30;    // Trucks & Accessories
  IAB2_22 = 31;    // Vintage Cars
  IAB2_23 = 32;    // Wagon
  IAB3 = 33;       // Business
  IAB3_1 = 34;     // Advertising
  IAB3_2 = 35;     // Agriculture
  IAB3_3 = 36;     // Biotech/Biomedical
  IAB3_4 = 37;     // Business Software
  IAB3_5 = 38;     // Construction
  IAB3_6 = 39;     // Forestry
  IAB3_7 = 40;     // Government
  IAB3_8 = 41;     // Green Solutions
  IAB3_9 = 42;     // Human Resources
  IAB3_10 = 43;    // Logistics
  IAB3_11 = 44;    // Marketing
  IAB3_12 = 45;    // Metals
  IAB4 = 46;       // Careers
  IAB4_1 = 47;     // Career Planning
  IAB4_2 = 48;     // College
  IAB4_3 = 49;     // Financial  Aid
  IAB4_4 = 50;     // Job Fairs
  IAB4_5 = 51;     // Job Search
  IAB4_6 = 52;     // Resume Writing/Advice
  IAB4_7 = 53;     // Nursing
  IAB4_8 = 54;     // Scholarships
  IAB4_9 = 55;     // Telecommuting
  IAB4_10 = 56;    // U.S. Military
  IAB4_11 = 57;    // Career Advice
  IAB5 = 58;       // Education
  IAB5_1 = 59;     // 7-12 Education
  IAB5_2 = 60;     // Adult Education
  IAB5_3 = 61;     // Art History
  IAB5_4 = 62;     // College Administration
  IAB5_5 = 63;     // College Life
  IAB5_6 = 64;     // Distance Learning
  IAB5_7 = 65;     // English as a 2nd Language
  IAB5_8 = 66;     // Language Learning
  IAB5_9 = 67;     // Graduate School
  IAB5_10 = 68;    // Homeschooling
  IAB5_11 = 69;    // Homework/Study Tips
  IAB5_12 = 70;    // K-6 Educators
  IAB5_13 = 71;    // Private School
  IAB5_14 = 72;    // Special Education
  IAB5_15 = 73;    // Studying Business
  IAB6 = 74;       // Family & Parenting
  IAB6_1 = 75;     // Adoption
  IAB6_2 = 76;     // Babies & Toddlers
  IAB6_3 = 77;     // Daycare/Pre School
  IAB6_4 = 78;     // Family Internet
  IAB6_5 = 79;     // Parenting - K-6 Kids
  IAB6_6 = 80;     // Parenting teens
  IAB6_7 = 81;     // Pregnancy
  IAB6_8 = 82;     // Special Needs Kids
  IAB6_9 = 83;     // Eldercare
  IAB7 = 84;       // Health & Fitness
  IAB7_1 = 85;     // Exercise
  IAB7_2 = 86;     // A.D.D.
  IAB7_3 = 87;     // AIDS/HIV
  IAB7_4 = 88;     // Allergies
  IAB7_5 = 89;     // Alternative Medicine
  IAB7_6 = 90;     // Arthritis
  IAB7_7 = 91;     // Asthma
  IAB7_8 = 92;     // Autism/PDD
  IAB7_9 = 93;     // Bipolar Disorder
  IAB7_10 = 94;    // Brain Tumor
  IAB7_11 = 95;    // Cancer
  IAB7_12 = 96;    // Cholesterol
  IAB7_13 = 97;    // Chronic Fatigue Syndrome
  IAB7_14 = 98;    // Chronic Pain
  IAB7_15 = 99;    // Cold & Flu
  IAB7_16 = 100;   // Deafness
  IAB7_17 = 101;   // Dental Care
  IAB7_18 = 102;   // Depression
  IAB7_19 = 103;   // Dermatology
  IAB7_20 = 104;   // Diabetes
  IAB7_21 = 105;   // Epilepsy
  IAB7_22 = 106;   // GERD/Acid Reflux
  IAB7_23 = 107;   // Headaches/Migraines
  IAB7_24 = 108;   // Heart Disease
  IAB7_25 = 109;   // Herbs for Health
  IAB7_26 = 110;   // Holistic Healing
  IAB7_27 = 111;   // IBS/Crohn's Disease
  IAB7_28 = 112;   // Incest/Abuse Support
  IAB7_29 = 113;   // Incontinence
  IAB7_30 = 114;   // Infertility
  IAB7_31 = 115;   // Men's Health
  IAB7_32 = 116;   // Nutrition
  IAB7_33 = 117;   // Orthopedics
  IAB7_34 = 118;   // Panic/Anxiety Disorders
  IAB7_35 = 119;   // Pediatrics
  IAB7_36 = 120;   // Physical Therapy
  IAB7_37 = 121;   // Psychology/Psychiatry
  IAB7_38 = 122;   // Senor Health
  IAB7_39 = 123;   // Sexuality
  IAB7_40 = 124;   // Sleep Disorders
  IAB7_41 = 125;   // Smoking Cessation
  IAB7_42 = 126;   // Substance Abuse
  IAB7_43 = 127;   // Thyroid Disease
  IAB7_44 = 128;   // Weight Loss
  IAB7_45 = 129;   // Women's Health
  IAB8 = 130;      // Food & Drink
  IAB8_1 = 131;    // American Cuisine
  IAB8_2 = 132;    // Barbecues & Grilling
  IAB8_3 = 133;    // Cajun/Creole
  IAB8_4 = 134;    // Chinese Cuisine
  IAB8_5 = 135;    // Cocktails/Beer
  IAB8_6 = 136;    // Coffee/Tea
  IAB8_7 = 137;    // Cuisine-Specific
  IAB8_8 = 138;    // Desserts & Baking
  IAB8_9 = 139;    // Dining Out
  IAB8_10 = 140;   // Food Allergies
  IAB8_11 = 141;   // French Cuisine
  IAB8_12 = 142;   // Health/Lowfat Cooking
  IAB8_13 = 143;   // Italian Cuisine
  IAB8_14 = 144;   // Japanese Cuisine
  IAB8_15 = 145;   // Mexican Cuisine
  IAB8_16 = 146;   // Vegan
  IAB8_17 = 147;   // Vegetarian
  IAB8_18 = 148;   // Wine
  IAB9 = 149;      // Hobbies & Interests
  IAB9_1 = 150;    // Art/Technology
  IAB9_2 = 151;    // Arts & Crafts
  IAB9_3 = 152;    // Beadwork
  IAB9_4 = 153;    // Birdwatching
  IAB9_5 = 154;    // Board Games/Puzzles
  IAB9_6 = 155;    // Candle & Soap Making
  IAB9_7 = 156;    // Card Games
  IAB9_8 = 157;    // Chess
  IAB9_9 = 158;    // Cigars
  IAB9_10 = 159;   // Collecting
  IAB9_11 = 160;   // Comic Books
  IAB9_12 = 161;   // Drawing/Sketching
  IAB9_13 = 162;   // Freelance Writing
  IAB9_14 = 163;   // Geneaology
  IAB9_15 = 164;   // Getting Published
  IAB9_16 = 165;   // Guitar
  IAB9_17 = 166;   // Home Recording
  IAB9_18 = 167;   // Investors & Patents
  IAB9_19 = 168;   // Jewelry Making
  IAB9_20 = 169;   // Magic & Illusion
  IAB9_21 = 170;   // Needlework
  IAB9_22 = 171;   // Painting
  IAB9_23 = 172;   // Photography
  IAB9_24 = 173;   // Radio
  IAB9_25 = 174;   // Roleplaying Games
  IAB9_26 = 175;   // Sci-Fi & Fantasy
  IAB9_27 = 176;   // Scrapbooking
  IAB9_28 = 177;   // Screenwriting
  IAB9_29 = 178;   // Stamps & Coins
  IAB9_30 = 179;   // Video & Computer Games
  IAB9_31 = 180;   // Woodworking
  IAB10 = 181;     // Home & Garden
  IAB10_1 = 182;   // Appliances
  IAB10_2 = 183;   // Entertaining
  IAB10_3 = 184;   // Environmental Safety
  IAB10_4 = 185;   // Gardening
  IAB10_5 = 186;   // Home Repair
  IAB10_6 = 187;   // Home Theater
  IAB10_7 = 188;   // Interior  Decorating
  IAB10_8 = 189;   // Landscaping
  IAB10_9 = 190;   // Remodeling & Construction
  IAB11 = 191;     // Law, Gov't & Politics
  IAB11_1 = 192;   // Immigration
  IAB11_2 = 193;   // Legal Issues
  IAB11_3 = 194;   // U.S. Government Resources
  IAB11_4 = 195;   // Politics
  IAB11_5 = 196;   // Commentary
  IAB12 = 197;     // News
  IAB12_1 = 198;   // International News
  IAB12_2 = 199;   // National News
  IAB12_3 = 200;   // Local News
  IAB13 = 201;     // Personal Finance
  IAB13_1 = 202;   // Beginning Investing
  IAB13_2 = 203;   // Credit/Debt & Loans
  IAB13_3 = 204;   // Financial News
  IAB13_4 = 205;   // Financial Planning
  IAB13_5 = 206;   // Hedge Fund
  IAB13_6 = 207;   // Insurance
  IAB13_7 = 208;   // Investing
  IAB13_8 = 209;   // Mutual Funds
  IAB13_9 = 210;   // Options
  IAB13_10 = 211;  // Retirement Planning
  IAB13_11 = 212;  // Stocks
  IAB13_12 = 213;  // Tax Planning
  IAB14 = 214;     // Society
  IAB14_1 = 215;   // Dating
  IAB14_2 = 216;   // Divorce Support
  IAB14_3 = 217;   // Gay Life
  IAB14_4 = 218;   // Marriage
  IAB14_5 = 219;   // Senior Living
  IAB14_6 = 220;   // Teens
  IAB14_7 = 221;   // Weddings
  IAB14_8 = 222;   // Ethnic Specific
  IAB15  =  223;   // Science
  IAB15_1 = 224;   // Astrology
  IAB15_2 = 225;   // Biology
  IAB15_3 = 226;   // Chemistry
  IAB15_4 = 227;   // Geology
  IAB15_5 = 228;   // Paranormal Phenomena
  IAB15_6 = 229;   // Physics
  IAB15_7 = 230;   // Space/Astronomy
  IAB15_8 = 231;   // Geography
  IAB15_9 = 232;   // Botany
  IAB15_10 = 233;  // Weather
  IAB16 = 234;     // Pets
  IAB16_1 = 235;   // Aquariums
  IAB16_2 = 236;   // Birds
  IAB16_3 = 237;   // Cats
  IAB16_4 = 238;   // Dogs
  IAB16_5 = 239;   // Large Animals
  IAB16_6 = 240;   // Reptiles
  IAB16_7 = 241;   // Veterinary Medicine
  IAB17 = 242;     // Sports
  IAB17_1 = 243;   // Auto Racing
  IAB17_2 = 244;   // Baseball
  IAB17_3 = 245;   // Bicycling
  IAB17_4 = 246;   // Bodybuilding
  IAB17_5 = 247;   // Boxing
  IAB17_6 = 248;   // Canoeing/Kayaking
  IAB17_7 = 249;   // Cheerleading
  IAB17_8 = 250;   // Climbing
  IAB17_9 = 251;   // Cricket
  IAB17_10 = 252;  // Figure Skating
  IAB17_11 = 253;  // Fly Fishing
  IAB17_12 = 254;  // Football
  IAB17_13 = 255;  // Freshwater Fishing
  IAB17_14 = 256;  // Game & Fish
  IAB17_15 = 257;  // Golf
  IAB17_16 = 258;  // Horse Racing
  IAB17_17 = 259;  // Horses
  IAB17_18 = 260;  // Hunting/Shooting
  IAB17_19 = 261;  // Inline  Skating
  IAB17_20 = 262;  // Martial Arts
  IAB17_21 = 263;  // Mountain Biking
  IAB17_22 = 264;  // NASCAR Racing
  IAB17_23 = 265;  // Olympics
  IAB17_24 = 266;  // Paintball
  IAB17_25 = 267;  // Power & Motorcycles
  IAB17_26 = 268;  // Pro Basketball
  IAB17_27 = 269;  // Pro Ice Hockey
  IAB17_28 = 270;  // Rodeo
  IAB17_29 = 271;  // Rugby
  IAB17_30 = 272;  // Running/Jogging
  IAB17_31 = 273;  // Sailing
  IAB17_32 = 274;  // Saltwater Fishing
  IAB17_33 = 275;  // Scuba Diving
  IAB17_34 = 276;  // Skateboarding
  IAB17_35 = 277;  // Skiing
  IAB17_36 = 278;  // Snowboarding
  IAB17_37 = 279;  // Surfing/Bodyboarding
  IAB17_38 = 280;  // Swimming
  IAB17_39 = 281;  // Table Tennis/Ping-Pong
  IAB17_40 = 282;  // Tennis
  IAB17_41 = 283;  // Volleyball
  IAB17_42 = 284;  // Walking
  IAB17_43 = 285;  // Waterski/Wakeboard
  IAB17_44 = 286;  // World Soccer
  IAB18 = 287;     // Style & Fashion
  IAB18_1 = 288;   // Beauty
  IAB18_2 = 289;   // Body Art
  IAB18_3 = 290;   // Fashion
  IAB18_4 = 291;   // Jewelry
  IAB18_5 = 292;   // Clothing
  IAB18_6 = 293;   // Accessories
  IAB19 = 294;     // Technology & Computing
  IAB19_1 = 295;   // 3-D Graphics
  IAB19_2 = 296;   // Animation
  IAB19_3 = 297;   // Antivirus Software
  IAB19_4 = 298;   // C/C++
  IAB19_5 = 299;   // Cameras & Camcorders
  IAB19_6 = 300;   // Cell  Phones
  IAB19_7 = 301;   // Computer Certification
  IAB19_8 = 302;   // Computer Networking
  IAB19_9 = 303;   // Computer Peripherals
  IAB19_10 = 304;  // Computer Reviews
  IAB19_11 = 305;  // Data Centers
  IAB19_12 = 306;  // Databases
  IAB19_13 = 307;  // Desktop Publishing
  IAB19_14 = 308;  // Desktop Video
  IAB19_15 = 309;  // Email
  IAB19_16 = 310;  // Graphics Software
  IAB19_17 = 311;  // Home Video/DVD
  IAB19_18 = 312;  // Internet Technology
  IAB19_19 = 313;  // Java
  IAB19_20 = 314;  // Javascript
  IAB19_21 = 315;  // Mac Support
  IAB19_22 = 316;  // MP3/MIDI
  IAB19_23 = 317;  // Net Conferencing
  IAB19_24 = 318;  // Net for Beginners
  IAB19_25 = 319;  // Network Security
  IAB19_26 = 320;  // Palmtops/PDAs
  IAB19_27 = 321;  // PC Support
  IAB19_28 = 322;  // Portable
  IAB19_29 = 323;  // Entertainment
  IAB19_30 = 324;  // Shareware/Freeware
  IAB19_31 = 325;  // Unix
  IAB19_32 = 326;  // Visual Basic
  IAB19_33 = 327;  // Web Clip Art
  IAB19_34 = 328;  // Web Design/HTML
  IAB19_35 = 329;  // Web Search
  IAB19_36 = 330;  // Windows
  IAB20 = 331;     // Travel
  IAB20_1 = 332;   // Adventure Travel
  IAB20_2 = 333;   // Africa
  IAB20_3 = 334;   // Air Travel
  IAB20_4 = 335;   // Australia & New Zealand
  IAB20_5 = 336;   // Bed & Breakfasts
  IAB20_6 = 337;   // Budget Travel
  IAB20_7 = 338;   // Business Travel
  IAB20_8 = 339;   // By US Locale
  IAB20_9 = 340;   // Camping
  IAB20_10 = 341;  // Canada
  IAB20_11 = 342;  // Caribbean
  IAB20_12 = 343;  // Cruises
  IAB20_13 = 344;  // Eastern  Europe
  IAB20_14 = 345;  // Europe
  IAB20_15 = 346;  // France
  IAB20_16 = 347;  // Greece
  IAB20_17 = 348;  // Honeymoons/Getaways
  IAB20_18 = 349;  // Hotels
  IAB20_19 = 350;  // Italy
  IAB20_20 = 351;  // Japan
  IAB20_21 = 352;  // Mexico & Central America
  IAB20_22 = 353;  // National Parks
  IAB20_23 = 354;  // South America
  IAB20_24 = 355;  // Spas
  IAB20_25 = 356;  // Theme Parks
  IAB20_26 = 357;  // Traveling with Kids
  IAB20_27 = 358;  // United Kingdom
  IAB21 = 359;     // Real Estate
  IAB21_1 = 360;   // Apartments
  IAB21_2 = 361;   // Architects
  IAB21_3 = 362;   // Buying/Selling Homes
  IAB22 = 363;     // Shopping
  IAB22_1 = 364;   // Contests & Freebies
  IAB22_2 = 365;   // Couponing
  IAB22_3 = 366;   // Comparison
  IAB22_4 = 367;   // Engines
  IAB23 = 368;     // Religion & Spirituality
  IAB23_1 = 369;   // Alternative Religions
  IAB23_2 = 370;   // Atheism/Agnosticism
  IAB23_3 = 371;   // Buddhism
  IAB23_4 = 372;   // Catholicism
  IAB23_5 = 373;   // Christianity
  IAB23_6 = 374;   // Hinduism
  IAB23_7 = 375;   // Islam
  IAB23_8 = 376;   // Judaism
  IAB23_9 = 377;   // Latter-Day Saints
  IAB23_10 = 378;  // Paga/Wiccan
  IAB24 = 379;     // Uncategorized
  IAB25 = 380;     // Non-Standard Content
  IAB25_1 = 381;   // Unmoderated UGC
  IAB25_2 = 382;   // Extreme Graphic/Explicit Violence
  IAB25_3 = 383;   // Pornography
  IAB25_4 = 384;   // Profane Content
  IAB25_5 = 385;   // Hate Content
  IAB25_6 = 386;   // Under Construction
  IAB25_7 = 387;   // Incentivized
  IAB26 = 388;     // Illegal Content
  IAB26_1 = 389;   // Illegal Content
  IAB26_2 = 390;   // Warez
  IAB26_3 = 391;   // Spyware/Malware
  IAB26_4 = 392;   // Copyright Infringement
}



